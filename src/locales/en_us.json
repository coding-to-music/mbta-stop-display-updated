{
  "action_prompt": {
    "about_link": "About",
    "additional_information_link": "Additional information",
    "close": "Close",
    "code_link": "Code",
    "reset": "Reset",
    "select_route_short": "Select a route",
    "select_route_type_short": "Select a route type",
    "select_route_type": "Please select a route type.",
    "select_route": "Please select a route.",
    "select_stop_short": "Select a stop",
    "select_stop": "Please select a route stop.",
    "toggle_hide": "Hide",
    "toggle_show": "Show"
  },
  "error": {
    "generic": "Something went wrong :-(",
    "no_arrival_information": "No arrival information for this stop was found.",
    "no_route_stops": "There are no stops for this route.",
    "no_routes_information": "The routes information was unable to load.",
    "no_stop_information": "The information for this stop was unable to load.",
    "prompt_report_error_information": "If you continue to see this error, please <0>report it as an issue</0>.",
    "prompt_try_again": "Please refresh the page, or try again later.",
    "request": {
      "alert": {
        "bad": "The alerts request was malformed.",
        "forbidden": "The alerts request was rejected.",
        "generic_problem": "There was a problem with the alerts request."
      },
      "prediction": {
        "bad": "The route predictions request was malformed.",
        "forbidden": "The route predictions request was rejected.",
        "generic_problem": "There was a problem with the route predictions request."
      },
      "route": {
        "bad": "The routes request was malformed.",
        "forbidden": "The routes request was rejected.",
        "generic_problem": "There was a problem with the routes request."
      },
      "schedule": {
        "bad": "The route schedule request was malformed.",
        "forbidden": "The route schedule request was rejected.",
        "generic_problem": "There was a problem with the route schedule request."
      },
      "stop": {
        "bad": "The route stops request was malformed.",
        "forbidden": "The route stops request was rejected.",
        "generic_problem": "There was a problem with the route stops request."
      },
      "rate_limited": "You have made too many requests in a short period of time."
    }
  },
  "input": {
    "all_label": "All",
    "bus_label": "Bus",
    "commuter_rail_label": "Commuter Rail",
    "ferry_label": "Ferry",
    "route_label": "Route",
    "route_type_label": "Route Type",
    "stop_label": "Route Stop",
    "train_label": "Train"
  },
  "state": {
    "arrival_and_departure_bus_prediction": "The bus will arrive in {{arrivalTime}} and will be leaving in {{departureTime}}.",
    "arrival_and_departure_bus_schedule": "The bus is scheduled to arrive in {{arrivalTime}} and leave in {{departureTime}}.",
    "arrival_and_departure_ferry_prediction": "The ferry will arrive in {{arrivalTime}} and will be leaving in {{departureTime}}.",
    "arrival_and_departure_ferry_schedule": "The ferry is scheduled to arrive in {{arrivalTime}} and leave in {{departureTime}}.",
    "arrival_and_departure_train_prediction": "The train will arrive in {{arrivalTime}} and will be leaving in {{departureTime}}.",
    "arrival_and_departure_train_schedule": "The train is scheduled to arrive in {{arrivalTime}} and leave in {{departureTime}}.",
    "arrival_currently_unknown": "is currently unknown",
    "data_loading": "Data is loading...",
    "departure_bus_prediction": "The bus will be leaving in {{departureTime}}.",
    "departure_bus_schedule": "The bus is scheduled to leave in {{departureTime}}.",
    "departure_ferry_prediction": "The ferry will be leaving in {{departureTime}}.",
    "departure_ferry_schedule": "The ferry is scheduled to leave in {{departureTime}}.",
    "departure_train_prediction": "The train will be leaving in {{departureTime}}.",
    "departure_train_schedule": "The train is scheduled to leave in {{departureTime}}.",
    "destination_header_bus": "The next bus to {{routeDestinationName}} ({{routeDirectionName}}):",
    "destination_header_ferry": "The next ferry to {{routeDestinationName}} ({{routeDirectionName}}):",
    "destination_header_train": "The next train to {{routeDestinationName}} ({{routeDirectionName}}):",
    "last_updated_label": "Last updated:",
    "service_alerts_count": "Service alerts ({{alertsCount}})",
    "stop_title": "{{routeDescription}} ({{routeLongName}}) at {{stopName}}",
    "untranslated_api_override": "{{untranslatedPassthrough}}"
  },
  "content": {
    "about_title": "About",
    "about_section_app": {
      "title": "About the App",
      "body": "This web app leverages the <0>MBTA API</0> to select and display relevant information for a given public transit stop. Its goal is to provide a simple, but useful interface for dedicated-purpose displays.",
      "body_link": "The code for this project can be found at: \n<0>{{appCodeUrl}}</0>"
    },
    "about_section_author": {
      "title": "About the Author",
      "body": "My name is <0>Jonathan Prusik</0>, and I'm a Boston-based full-stack software engineer. I like building things that people will use and find useful.",
      "body_link": "I can be contacted via <0>LinkedIn</0> and <1>e-mail</1>."
    },
    "about_section_legal": {
      "title": "Legal",
      "body": "All rights reserved for original content and code by Jonathan Prusik.\n\nThis website and project are not affiliated with the MBTA in any way. All MBTA icons and logos are trademarks of the MBTA."
    }
  }
}
